# The daemon process must be disabled on Gradle 8.10.1; later versions can use it or not.
# We avoid using the daemon by default because it can improve startup times... sometimes.
org.gradle.daemon=false
# These defaults increase the default memory limits slightly, and try to make the
# encoding reliably UTF-8. Getting encoding to work with just this isn't always possible.
org.gradle.jvmargs=-Xms128m -Xmx512m -Dfile.encoding=UTF-8 -Dconsole.encoding=UTF-8
# Configure On Demand never works if Android projects are present; it should be off.
org.gradle.configureondemand=false

gdxVersion=1.13.1

# This must match your Maven Central group if you publish there; otherwise,
# change this template to match your group ID.
GROUP=com.github.tommyettinger
# The name of the library, as it can be downloaded using Maven or Gradle.
POM_ARTIFACT_ID=dualspatialgrid
# This version should always be updated here; it is used elsewhere.
VERSION_NAME=0.0.1-SNAPSHOT

# The name of the library; might be different from POM_ARTIFACT_ID .
POM_NAME=dualspatialgrid
POM_DESCRIPTION=Spatial partitioning algorithm with collision resolution logic for 2D games.
POM_INCEPTION_YEAR=2025

# Just change all this to use your GitHub or other URL.
POM_URL=https://github.com/tommyettinger/libdsg/
POM_SCM_URL=https://github.com/tommyettinger/libdsg/
POM_SCM_CONNECTION=scm:https://tommyettinger@github.com/tommyettinger/libdsg.git
POM_SCM_DEV_CONNECTION=scm:git://github.com/tommyettinger/libdsg.git

# Another common option is the Apache License, which libGDX uses. It is considered
# a "business-friendly" permissive license, and allows commercial use.
POM_LICENCE_NAME=The Apache Software License, Version 2.0
POM_LICENCE_URL=https://www.apache.org/licenses/LICENSE-2.0.txt
POM_LICENCE_DIST=repo

# Obviously, change this part of the template if you aren't Tommy Ettinger.
POM_DEVELOPER_ID=tommyettinger
POM_DEVELOPER_NAME=Tommy Ettinger
POM_DEVELOPER_URL=https://github.com/tommyettinger/

# These two lines allow uploading to Maven Central, if you want.
# You can use JitPack to handle releases and never touch Maven Central, or you can
# register with Sonatype to get a Maven Central "group" that you can push to.
# Maven Central can be a lot more work, but is the more "professional" and stable
# of the two options.
SONATYPE_HOST=DEFAULT
# If releasing to Maven Central, you should set this to true during the release
# process, and typically you will want to set it back to false before you tag
# a release on GitHub. This is because Maven Central needs signed JARs, but
# JitPack can't easily sign JARs using your keys, if it just built those JARs.
RELEASE_SIGNING_ENABLED=false
